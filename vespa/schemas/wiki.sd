schema wiki {
  	document wiki {
  		field id type string {
  			indexing: summary | attribute
  		}
  	  	field page type string {
  	  		indexing: summary | attribute | index
  	      	index: enable-bm25
  	  	}
  	  	field chunkIndex type int {
  	  		indexing: summary
  	  	}
  	  	field content type string {
  	  		indexing: summary | index
  	      	index: enable-bm25
  	 	}
  	}

  	field embedding type tensor<float>(x[768]) {
  		indexing: input content | embed nomic | summary | attribute | index
  		attribute {
        	distance-metric: angular
        }
  	}

  	fieldset default {
  		fields: page, chunkIndex, content
  	}

  	rank-profile bm25 {
  	    first-phase {
  	        expression: bm25(page) + bm25(content)
  	    }
  	    rank-properties {
        	bm25(title).k1: 0.9
        	bm25(title).b: 0.4
        	bm25(content).k1: 0.9
        	bm25(content).b: 0.4
        }
  	}

  	rank-profile native-rank {
  	    first-phase {
  	        expression: nativeRank(page, content)
  	    }
  	}

    rank-profile dense inherits default {
        inputs {
            query(q_embedding) tensor<float>(x[768])
        }
        first-phase {
            expression: closeness(field, embedding)
        }
    }

	rank-profile hybrid inherits default {
        inputs {
            query(q_embedding) tensor<float>(x[768])
        }
        first-phase {
            expression: 0.7*bm25(content) + 2.9*closeness(field, embedding)
        }
        match-features {
        	bm25(content)
        	closeness(field, embedding)
        }
	}

  	# rank-profile cross-encoder { }

  	# rank-profile colbert
}