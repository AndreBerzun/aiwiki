/*
 * Ollama API
 * API Spec for Ollama API. Please see https://github.com/jmorganca/ollama/blob/main/docs/api.md for more details.
 *
 * The version of the OpenAPI document: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.lianto.ollama.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for RequestOptions
 */
public class RequestOptionsTest {
    private final RequestOptions model = new RequestOptions();

    /**
     * Model tests for RequestOptions
     */
    @Test
    public void testRequestOptions() {
        // TODO: test RequestOptions
    }

    /**
     * Test the property 'numKeep'
     */
    @Test
    public void numKeepTest() {
        // TODO: test numKeep
    }

    /**
     * Test the property 'seed'
     */
    @Test
    public void seedTest() {
        // TODO: test seed
    }

    /**
     * Test the property 'numPredict'
     */
    @Test
    public void numPredictTest() {
        // TODO: test numPredict
    }

    /**
     * Test the property 'topK'
     */
    @Test
    public void topKTest() {
        // TODO: test topK
    }

    /**
     * Test the property 'topP'
     */
    @Test
    public void topPTest() {
        // TODO: test topP
    }

    /**
     * Test the property 'tfsZ'
     */
    @Test
    public void tfsZTest() {
        // TODO: test tfsZ
    }

    /**
     * Test the property 'typicalP'
     */
    @Test
    public void typicalPTest() {
        // TODO: test typicalP
    }

    /**
     * Test the property 'repeatLastN'
     */
    @Test
    public void repeatLastNTest() {
        // TODO: test repeatLastN
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

    /**
     * Test the property 'repeatPenalty'
     */
    @Test
    public void repeatPenaltyTest() {
        // TODO: test repeatPenalty
    }

    /**
     * Test the property 'presencePenalty'
     */
    @Test
    public void presencePenaltyTest() {
        // TODO: test presencePenalty
    }

    /**
     * Test the property 'frequencyPenalty'
     */
    @Test
    public void frequencyPenaltyTest() {
        // TODO: test frequencyPenalty
    }

    /**
     * Test the property 'mirostat'
     */
    @Test
    public void mirostatTest() {
        // TODO: test mirostat
    }

    /**
     * Test the property 'mirostatTau'
     */
    @Test
    public void mirostatTauTest() {
        // TODO: test mirostatTau
    }

    /**
     * Test the property 'mirostatEta'
     */
    @Test
    public void mirostatEtaTest() {
        // TODO: test mirostatEta
    }

    /**
     * Test the property 'penalizeNewline'
     */
    @Test
    public void penalizeNewlineTest() {
        // TODO: test penalizeNewline
    }

    /**
     * Test the property 'stop'
     */
    @Test
    public void stopTest() {
        // TODO: test stop
    }

    /**
     * Test the property 'numa'
     */
    @Test
    public void numaTest() {
        // TODO: test numa
    }

    /**
     * Test the property 'numCtx'
     */
    @Test
    public void numCtxTest() {
        // TODO: test numCtx
    }

    /**
     * Test the property 'numBatch'
     */
    @Test
    public void numBatchTest() {
        // TODO: test numBatch
    }

    /**
     * Test the property 'numGqa'
     */
    @Test
    public void numGqaTest() {
        // TODO: test numGqa
    }

    /**
     * Test the property 'numGpu'
     */
    @Test
    public void numGpuTest() {
        // TODO: test numGpu
    }

    /**
     * Test the property 'mainGpu'
     */
    @Test
    public void mainGpuTest() {
        // TODO: test mainGpu
    }

    /**
     * Test the property 'lowVram'
     */
    @Test
    public void lowVramTest() {
        // TODO: test lowVram
    }

    /**
     * Test the property 'f16Kv'
     */
    @Test
    public void f16KvTest() {
        // TODO: test f16Kv
    }

    /**
     * Test the property 'logitsAll'
     */
    @Test
    public void logitsAllTest() {
        // TODO: test logitsAll
    }

    /**
     * Test the property 'vocabOnly'
     */
    @Test
    public void vocabOnlyTest() {
        // TODO: test vocabOnly
    }

    /**
     * Test the property 'useMmap'
     */
    @Test
    public void useMmapTest() {
        // TODO: test useMmap
    }

    /**
     * Test the property 'useMlock'
     */
    @Test
    public void useMlockTest() {
        // TODO: test useMlock
    }

    /**
     * Test the property 'embeddingOnly'
     */
    @Test
    public void embeddingOnlyTest() {
        // TODO: test embeddingOnly
    }

    /**
     * Test the property 'ropeFrequencyBase'
     */
    @Test
    public void ropeFrequencyBaseTest() {
        // TODO: test ropeFrequencyBase
    }

    /**
     * Test the property 'ropeFrequencyScale'
     */
    @Test
    public void ropeFrequencyScaleTest() {
        // TODO: test ropeFrequencyScale
    }

    /**
     * Test the property 'numThread'
     */
    @Test
    public void numThreadTest() {
        // TODO: test numThread
    }

}
