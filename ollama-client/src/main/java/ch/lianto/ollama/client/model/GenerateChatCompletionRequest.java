/*
 * Ollama API
 * API Spec for Ollama API. Please see https://github.com/jmorganca/ollama/blob/main/docs/api.md for more details.
 *
 * The version of the OpenAPI document: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.lianto.ollama.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.lianto.ollama.client.model.Message;
import ch.lianto.ollama.client.model.RequestOptions;
import ch.lianto.ollama.client.model.ResponseFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request class for the chat endpoint.
 */
@JsonPropertyOrder({
  GenerateChatCompletionRequest.JSON_PROPERTY_MODEL,
  GenerateChatCompletionRequest.JSON_PROPERTY_MESSAGES,
  GenerateChatCompletionRequest.JSON_PROPERTY_FORMAT,
  GenerateChatCompletionRequest.JSON_PROPERTY_OPTIONS,
  GenerateChatCompletionRequest.JSON_PROPERTY_STREAM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T00:48:30.515751098+01:00[Europe/Zurich]")
public class GenerateChatCompletionRequest {
  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_MESSAGES = "messages";
  private List<Message> messages = new ArrayList<>();

  public static final String JSON_PROPERTY_FORMAT = "format";
  private ResponseFormat format;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private RequestOptions options;

  public static final String JSON_PROPERTY_STREAM = "stream";
  private Boolean stream = false;

  public GenerateChatCompletionRequest() {
  }

  public GenerateChatCompletionRequest model(String model) {
    
    this.model = model;
    return this;
  }

   /**
   * The model name.   Model names follow a &#x60;model:tag&#x60; format. Some examples are &#x60;orca-mini:3b-q4_1&#x60; and &#x60;llama2:70b&#x60;. The tag is optional and, if not provided, will default to &#x60;latest&#x60;. The tag is used to identify a specific version. 
   * @return model
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModel(String model) {
    this.model = model;
  }


  public GenerateChatCompletionRequest messages(List<Message> messages) {
    
    this.messages = messages;
    return this;
  }

  public GenerateChatCompletionRequest addMessagesItem(Message messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * The messages of the chat, this can be used to keep a chat memory
   * @return messages
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Message> getMessages() {
    return messages;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessages(List<Message> messages) {
    this.messages = messages;
  }


  public GenerateChatCompletionRequest format(ResponseFormat format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResponseFormat getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(ResponseFormat format) {
    this.format = format;
  }


  public GenerateChatCompletionRequest options(RequestOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequestOptions getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(RequestOptions options) {
    this.options = options;
  }


  public GenerateChatCompletionRequest stream(Boolean stream) {
    
    this.stream = stream;
    return this;
  }

   /**
   * If &#x60;false&#x60; the response will be returned as a single response object, otherwise the response will be streamed as a series of objects. 
   * @return stream
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStream() {
    return stream;
  }


  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStream(Boolean stream) {
    this.stream = stream;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateChatCompletionRequest generateChatCompletionRequest = (GenerateChatCompletionRequest) o;
    return Objects.equals(this.model, generateChatCompletionRequest.model) &&
        Objects.equals(this.messages, generateChatCompletionRequest.messages) &&
        Objects.equals(this.format, generateChatCompletionRequest.format) &&
        Objects.equals(this.options, generateChatCompletionRequest.options) &&
        Objects.equals(this.stream, generateChatCompletionRequest.stream);
  }

  @Override
  public int hashCode() {
    return Objects.hash(model, messages, format, options, stream);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateChatCompletionRequest {\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

