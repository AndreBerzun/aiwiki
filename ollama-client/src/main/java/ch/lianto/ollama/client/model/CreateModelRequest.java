/*
 * Ollama API
 * API Spec for Ollama API. Please see https://github.com/jmorganca/ollama/blob/main/docs/api.md for more details.
 *
 * The version of the OpenAPI document: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.lianto.ollama.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Create model request object.
 */
@JsonPropertyOrder({
  CreateModelRequest.JSON_PROPERTY_NAME,
  CreateModelRequest.JSON_PROPERTY_MODELFILE,
  CreateModelRequest.JSON_PROPERTY_STREAM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-06T00:48:30.515751098+01:00[Europe/Zurich]")
public class CreateModelRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MODELFILE = "modelfile";
  private String modelfile;

  public static final String JSON_PROPERTY_STREAM = "stream";
  private Boolean stream = false;

  public CreateModelRequest() {
  }

  public CreateModelRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The model name.   Model names follow a &#x60;model:tag&#x60; format. Some examples are &#x60;orca-mini:3b-q4_1&#x60; and &#x60;llama2:70b&#x60;. The tag is optional and, if not provided, will default to &#x60;latest&#x60;. The tag is used to identify a specific version. 
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateModelRequest modelfile(String modelfile) {
    
    this.modelfile = modelfile;
    return this;
  }

   /**
   * The contents of the Modelfile.
   * @return modelfile
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODELFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModelfile() {
    return modelfile;
  }


  @JsonProperty(JSON_PROPERTY_MODELFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModelfile(String modelfile) {
    this.modelfile = modelfile;
  }


  public CreateModelRequest stream(Boolean stream) {
    
    this.stream = stream;
    return this;
  }

   /**
   * If &#x60;false&#x60; the response will be returned as a single response object, otherwise the response will be streamed as a series of objects. 
   * @return stream
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStream() {
    return stream;
  }


  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStream(Boolean stream) {
    this.stream = stream;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateModelRequest createModelRequest = (CreateModelRequest) o;
    return Objects.equals(this.name, createModelRequest.name) &&
        Objects.equals(this.modelfile, createModelRequest.modelfile) &&
        Objects.equals(this.stream, createModelRequest.stream);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, modelfile, stream);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateModelRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modelfile: ").append(toIndentedString(modelfile)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

