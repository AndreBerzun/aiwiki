/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.lianto.openai.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.lianto.openai.client.model.AssistantObjectToolsInner;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateRunRequest
 */
@JsonPropertyOrder({
  CreateRunRequest.JSON_PROPERTY_ASSISTANT_ID,
  CreateRunRequest.JSON_PROPERTY_MODEL,
  CreateRunRequest.JSON_PROPERTY_INSTRUCTIONS,
  CreateRunRequest.JSON_PROPERTY_TOOLS,
  CreateRunRequest.JSON_PROPERTY_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-08T23:05:52.228713843+01:00[Europe/Zurich]")
public class CreateRunRequest {
  public static final String JSON_PROPERTY_ASSISTANT_ID = "assistant_id";
  private String assistantId;

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INSTRUCTIONS = "instructions";
  private JsonNullable<String> instructions = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TOOLS = "tools";
  private JsonNullable<List<AssistantObjectToolsInner>> tools = JsonNullable.<List<AssistantObjectToolsInner>>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public CreateRunRequest() {
  }

  public CreateRunRequest assistantId(String assistantId) {
    
    this.assistantId = assistantId;
    return this;
  }

   /**
   * The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
   * @return assistantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAssistantId() {
    return assistantId;
  }


  @JsonProperty(JSON_PROPERTY_ASSISTANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssistantId(String assistantId) {
    this.assistantId = assistantId;
  }


  public CreateRunRequest model(String model) {
    this.model = JsonNullable.<String>of(model);
    
    return this;
  }

   /**
   * The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
   * @return model
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public CreateRunRequest instructions(String instructions) {
    this.instructions = JsonNullable.<String>of(instructions);
    
    return this;
  }

   /**
   * Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.
   * @return instructions
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getInstructions() {
        return instructions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInstructions_JsonNullable() {
    return instructions;
  }
  
  @JsonProperty(JSON_PROPERTY_INSTRUCTIONS)
  public void setInstructions_JsonNullable(JsonNullable<String> instructions) {
    this.instructions = instructions;
  }

  public void setInstructions(String instructions) {
    this.instructions = JsonNullable.<String>of(instructions);
  }


  public CreateRunRequest tools(List<AssistantObjectToolsInner> tools) {
    this.tools = JsonNullable.<List<AssistantObjectToolsInner>>of(tools);
    
    return this;
  }

  public CreateRunRequest addToolsItem(AssistantObjectToolsInner toolsItem) {
    if (this.tools == null || !this.tools.isPresent()) {
      this.tools = JsonNullable.<List<AssistantObjectToolsInner>>of(new ArrayList<>());
    }
    try {
      this.tools.get().add(toolsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
   * @return tools
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<AssistantObjectToolsInner> getTools() {
        return tools.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AssistantObjectToolsInner>> getTools_JsonNullable() {
    return tools;
  }
  
  @JsonProperty(JSON_PROPERTY_TOOLS)
  public void setTools_JsonNullable(JsonNullable<List<AssistantObjectToolsInner>> tools) {
    this.tools = tools;
  }

  public void setTools(List<AssistantObjectToolsInner> tools) {
    this.tools = JsonNullable.<List<AssistantObjectToolsInner>>of(tools);
  }


  public CreateRunRequest metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRunRequest createRunRequest = (CreateRunRequest) o;
    return Objects.equals(this.assistantId, createRunRequest.assistantId) &&
        equalsNullable(this.model, createRunRequest.model) &&
        equalsNullable(this.instructions, createRunRequest.instructions) &&
        equalsNullable(this.tools, createRunRequest.tools) &&
        equalsNullable(this.metadata, createRunRequest.metadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(assistantId, hashCodeNullable(model), hashCodeNullable(instructions), hashCodeNullable(tools), hashCodeNullable(metadata));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRunRequest {\n");
    sb.append("    assistantId: ").append(toIndentedString(assistantId)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

